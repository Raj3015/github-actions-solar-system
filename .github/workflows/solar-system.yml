name: Solar System Workflow


on: 
  workflow_dispatch:

  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: ${{ vars.MONGO_URI }}
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    
jobs:
    code-coverage:
        name: code-coverage
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4

          - name: Setup NodeJS Version
            uses: actions/setup-node@v4
            with:
              node-version: 20

          - name: cache NPM Dependecies
            uses: actions/cache@v4
            with:
              path: node_modules
              key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

          - name: Install Dependencies
            run: npm install

          - name: npm run code-coverage
            run: npm run coverage
            continue-on-error: true
          - uses: actions/upload-artifact@v4
            with:
              name: Code-Coverage-Result
              path: coverage
              retention-days: 5


    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20
        - name: cache NPM Dependecies
          uses: actions/cache@v4
          with:
              path: node_modules
              key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }} 
            
              
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    docker:
      runs-on: ubuntu-latest
      needs: [code-coverage,unit-testing]
      steps:
        - name: clone repo
          uses: actions/checkout@v4
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        
        - name: Build  Image
          uses: docker/build-push-action@v6
          with:
            context: .
            push: false
            tags: ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}
        - name: Docker Image testing
          run: |
           docker images
           docker run --name solar-system-app -d \
              -p 3000:3000 \
              -e MONGO_URI=$MONGO_URI \
              -e MONGO_USERNAME= $MONGO_USERNAME \
              -e MONGO_PASSWORD = $MONGO_PASSWORD \
              ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}
          
           export IP= $(docker inspect -f '{{rang .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
           echo $IP

           echo Testing Image url using wget
           wget -q -O 127.0.0.1:3000/live |grep live

           

          